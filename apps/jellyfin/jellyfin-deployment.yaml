apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  labels:
    helm.sh/chart: jellyfin-2.3.0
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: jellyfin
    app.kubernetes.io/version: "10.10.6"
    app.kubernetes.io/managed-by: Helm
spec:
  strategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
      app.kubernetes.io/instance: jellyfin
  template:
    metadata:
      labels:
        helm.sh/chart: jellyfin-2.3.0
        app.kubernetes.io/name: jellyfin
        app.kubernetes.io/instance: jellyfin
        app.kubernetes.io/version: "10.10.6"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: jellyfin
      securityContext:
        {}
      containers:
        - name: jellyfin
          securityContext:
            {}
          image: "docker.io/jellyfin/jellyfin:10.10.6"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8096
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 10
            tcpSocket:
              port: http
          readinessProbe:
            initialDelaySeconds: 10
            tcpSocket:
              port: http
          resources:
            {}
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /media
              name: media
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: jellyfin-config
        - name: media
          persistentVolumeClaim:
            claimName: jellyfin-media
